apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicasCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailableCount }}
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /data/studio
              name: {{ .Chart.Name }}-fs
          ports:
            - containerPort: {{ .Values.service.internalHttpPort }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalHttpPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalHttpPort }}
          env:
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: ADDR
              value: 0.0.0.0:{{ .Values.service.internalHttpPort }}
            - name: DOWNLOAD_DIR
              value: "/data/studio/uploader"
            - name: USERS_RPC_ADDR
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}
                  key: usersRpcAddr
            - name: STREAMS_RPC_ADDR
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}
                  key: streamsRpcAddr
            - name: SPLITTER_RPC_ADDR
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}
                  key: splitterRpcAddr
            - name: AUTH_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: authTokenSecret
            - name: GDRIVE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: gdriveKey
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: sentryDsn
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}
        - name: secrets
          secret:
            secretName: {{ .Release.Name }}
        - name: {{ .Chart.Name }}-fs
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-fs
            readOnly: false
      nodeSelector:
        cloud.google.com/gke-nodepool: api